/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        bmt: bmt {
            compatible = "zmk,behavior-hold-tap";
            label = "BMT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            require-prior-idle-ms = <125>;
        };

        tmt: tmt {
            compatible = "zmk,behavior-hold-tap";
            label = "TMT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            require-prior-idle-ms = <125>;
        };

        hmt: hmt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <175>;
            require-prior-idle-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3  &kp N4    &kp N5                            &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB           &kp Q   &kp W   &kp E   &kp R     &kp T                             &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BACKSPACE
&mt LCTRL ESCAPE  &kp A   &kp S   &kp D   &kp F     &kp G                             &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z   &kp X   &kp C   &kp V     &kp B     &kp LBKT     &kp RBKT   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                                  &trans  &kp LGUI  &kp LALT  &kp SPACE    &kp ENTER  &mo 3   &mo 4   &trans
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans     &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                          &kp F7     &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                       &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans    &trans  &trans     &kp MINUS  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                                 &trans             &trans        &trans        &trans    &trans  &trans     &trans     &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans          &trans     &trans     &trans     &trans    &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6          &kp N7     &kp N8     &kp N9     &kp N0    &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &kp LEFT_ARROW  &kp DOWN   &kp UP     &kp RIGHT  &trans    &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS     &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans          &trans     &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans     &trans  &trans  &trans   &trans                       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans     &trans  &trans
&trans  &kp SLASH  &kp N7  &kp N8  &kp N9   &kp MINUS                    &trans      &trans        &trans        &trans     &trans  &trans
&trans  &kp STAR   &kp N4  &kp N5  &kp N6   &kp PLUS                     &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT  &trans  &trans
&trans  &trans     &kp N1  &kp N2  &kp N3   &trans     &trans    &trans  &trans      &trans        &trans        &trans     &trans  &trans
                           &trans  &kp DOT  &kp N0     &trans    &trans  &trans      &trans        &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans    &trans         &trans            &trans     &trans                       &trans     &trans       &trans        &trans        &trans        &trans
&trans  &trans    &kp LESS_THAN  &kp GREATER_THAN  &kp BSLH   &kp GRAVE                    &kp AMPS   &trans       &kp LBKT      &kp RBKT      &trans        &trans
&trans  &kp EXCL  &kp MINUS      &kp PLUS          &kp EQUAL  &kp HASH                     &kp PIPE   &kp PERCENT  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(SEMI)  &trans
&trans  &trans    &kp FSLH       &kp STAR          &kp CARET  &trans     &trans    &trans  &kp GRAVE  &kp DOLLAR   &kp LS(LBRC)  &kp LS(RBRC)  &trans        &trans
                                 &trans            &trans     &trans     &trans    &trans  &trans     &trans       &trans
            >;
        };
    };
};
